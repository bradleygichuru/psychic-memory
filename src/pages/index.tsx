import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { trpc } from "../utils/trpc";
import { BiChevronsRight } from "react-icons/bi";
import Layout from "../components/layout";
import router from "next/router";
import { useEffect, useState } from "react";
import { Student, Voter } from "@prisma/client";
import { object } from "zod";

const Home: NextPage = () => {
  const [token,setToken] = useState("");
  const [isVoter,setIsVoter] = useState(false);
  const [voter,setVoter] = useState<(Voter & {
    student: Student;
})>();
   const mutation = trpc.useMutation("voter.registerVoter");
  useEffect(()=>{
    let token = sessionStorage.getItem("token");
    if(token == null){
      router.push("/auth/signin")
    }else{
      setToken(token);
    }

  },[]);
  const register = () =>{
    mutation.mutateAsync({accessToken:token}).then(res => {
      if (res.voter) {
        setVoter(res?.voter!);
        setIsVoter(true);
      }
    })
  }
const {data} = trpc.useQuery(["voter.isVoter",{accessToken:token!}],{onSuccess(data) {
   if(data.existence == null){

    setIsVoter(false);
   }if(data.voter){
    setIsVoter(true);
    setVoter(data.voter)
   }
},})
console.log(data)  
return (

    <Layout>
      <div
        data-theme="garden"
        className="grid grid-cols-1 place-items-center h-screen "
      >
        <Head>
          <title>Create T3 App</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

       {!isVoter && <div className="card w-96 bg-base-100 shadow-xl">
          <div className="card-body">
            <h2 className="card-title">You are not registered as a voter</h2>
            <p>To vote for candidates you must be a registered voter</p>
            <div className="card-actions justify-end">
              <button className="btn btn-primary" onClick={register}>register</button>
            </div>
          </div>
        </div>}
        {isVoter &&  <div className="overflow-x-auto ">
          <table className="table">
            <thead>
              <tr>
              
                <th>Voter</th>
                <th>id</th>
                
              </tr>
            </thead>
            <tbody>
              <tr>
               
                <td>{voter?.student.FirstName} {voter?.student.SirName}</td>
                <td>{voter?.VoterId}</td>
                
               
              </tr>

            </tbody>
          </table>
        </div>}
      </div>
    </Layout>
  );
};

export default Home;
