generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Student {
  StudentNo   Int        @id @unique
  displayName String    @unique
  FirstName   String
  SirName     String
  Email       String     @unique
  Faculty     String
  Course      String
  YearOfStudy Int
  password    String     @unique
  voter       Voter?
  candidate   Candidate?
  messages    Message[]
}

model Candidate {
  CandidateId  String   @id @unique @default(cuid())
  StudentNo    Int      @unique
  PositionName String
  Manifesto    String   @default("Here’s to the crazy ones. The misfits. The rebels. The troublemakers. The round pegs in the square holes. The ones who see things differently. They’re not fond of rules. And they have no respect for the status quo. You can praise them, disagree with them, quote them, disbelieve them, glorify them or vilify them. About the only thing you can’t do is ignore them. Because they change things.") @db.LongText
  student      Student  @relation(fields: [StudentNo], references: [StudentNo], onDelete: Cascade, onUpdate: Cascade)
  position     Position @relation(fields: [PositionName], references: [PositionName], onDelete: Cascade, onUpdate: Cascade)
  VoteCount    Int      @default(0)
}

model Message {
  MessageId       String  @id @unique @default(cuid())
  Contents        String
  senderId        String
  receipientName  String
  parentMessageId String? @default("")
  sender          Voter   @relation(fields: [senderId], references: [VoterId], onDelete: Cascade, onUpdate: Cascade)
  receipient      Student @relation(fields: [receipientName], references: [displayName], onDelete: Cascade, onUpdate: Cascade)
}

model Position {
  PositionId          String      @id @unique @default(cuid())
  PositionName        String      @unique
  PositionDescription String
  VotesCast           Int         @default(0)
  candidates          Candidate[]
}

model Election {
  ElectionId          String   @id @unique @default(cuid())
  ElectionName        String
  ElectionDescription String
  ElectionDate        DateTime
  InProgress          Boolean
  StartedAt           DateTime
}

model Voter {
  VoterId        String    @id @unique @default(cuid())
  StudentNo      Int       @unique
  student        Student   @relation(fields: [StudentNo], references: [StudentNo])
  VotingStatus   Boolean
  LoginTimeStamp String
  Message        Message[]
}

model Admin {
  AdminId   String @id @unique @default(cuid())
  AdminName String
  password  String
}
